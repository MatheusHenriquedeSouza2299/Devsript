{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matheushenrique2011\\\\Documents\\\\devsprint\\\\devscript-frontend\\\\src\\\\pages\\\\SprintPlanning.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/sprintPlanning.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SprintPlanning() {\n  _s();\n  const [tarefas, setTarefas] = useState([]);\n  const [tarefasSelecionadas, setTarefasSelecionadas] = useState([]);\n  const [nomeSprint, setNomeSprint] = useState('');\n  const [duracaoDias, setDuracaoDias] = useState('');\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const headers = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const carregarTarefas = async () => {\n    try {\n      const res = await api.get('/api/tarefas', headers);\n      const pendentes = res.data.filter(t => t.status === 'Pendente');\n      setTarefas(pendentes);\n    } catch (err) {\n      console.error('Erro ao carregar tarefas:', err);\n    }\n  };\n  useEffect(() => {\n    carregarTarefas();\n  }, []);\n  const toggleTarefa = id => {\n    setTarefasSelecionadas(prev => prev.includes(id) ? prev.filter(tid => tid !== id) : [...prev, id]);\n  };\n  const iniciarSprint = () => {\n    if (!nomeSprint || !duracaoDias || tarefasSelecionadas.length === 0) {\n      alert('Preencha todos os campos e selecione pelo menos uma tarefa.');\n      return;\n    }\n    alert(`Sprint \"${nomeSprint}\" criada com ${tarefasSelecionadas.length} tarefa(s) por ${duracaoDias} dia(s).`);\n    // Aqui você pode enviar as informações para o backend se desejar\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sprint-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Planejamento de Sprint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sprint-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome da Sprint\",\n        value: nomeSprint,\n        onChange: e => setNomeSprint(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Dura\\xE7\\xE3o (em dias)\",\n        value: duracaoDias,\n        onChange: e => setDuracaoDias(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tarefas Pendentes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lista-tarefas\",\n      children: tarefas.map(tarefa => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: tarefasSelecionadas.includes(tarefa._id),\n            onChange: () => toggleTarefa(tarefa._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), tarefa.nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, tarefa._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sprint-botoes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: iniciarSprint,\n        children: \"Iniciar Sprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/dashboard'),\n        children: \"Voltar ao Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(SprintPlanning, \"kdAw3xk+o9KKnx71g+WdnE/dPAE=\", false, function () {\n  return [useNavigate];\n});\n_c = SprintPlanning;\nexport default SprintPlanning;\nvar _c;\n$RefreshReg$(_c, \"SprintPlanning\");","map":{"version":3,"names":["useEffect","useState","api","useNavigate","jsxDEV","_jsxDEV","SprintPlanning","_s","tarefas","setTarefas","tarefasSelecionadas","setTarefasSelecionadas","nomeSprint","setNomeSprint","duracaoDias","setDuracaoDias","navigate","token","localStorage","getItem","headers","Authorization","carregarTarefas","res","get","pendentes","data","filter","t","status","err","console","error","toggleTarefa","id","prev","includes","tid","iniciarSprint","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","tarefa","checked","_id","nome","onClick","_c","$RefreshReg$"],"sources":["C:/Users/matheushenrique2011/Documents/devsprint/devscript-frontend/src/pages/SprintPlanning.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/sprintPlanning.css';\r\n\r\nfunction SprintPlanning() {\r\n  const [tarefas, setTarefas] = useState([]);\r\n  const [tarefasSelecionadas, setTarefasSelecionadas] = useState([]);\r\n  const [nomeSprint, setNomeSprint] = useState('');\r\n  const [duracaoDias, setDuracaoDias] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const token = localStorage.getItem('token');\r\n  const headers = { headers: { Authorization: `Bearer ${token}` } };\r\n\r\n  const carregarTarefas = async () => {\r\n    try {\r\n      const res = await api.get('/api/tarefas', headers);\r\n      const pendentes = res.data.filter(t => t.status === 'Pendente');\r\n      setTarefas(pendentes);\r\n    } catch (err) {\r\n      console.error('Erro ao carregar tarefas:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    carregarTarefas();\r\n  }, []);\r\n\r\n  const toggleTarefa = (id) => {\r\n    setTarefasSelecionadas((prev) =>\r\n      prev.includes(id) ? prev.filter((tid) => tid !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const iniciarSprint = () => {\r\n    if (!nomeSprint || !duracaoDias || tarefasSelecionadas.length === 0) {\r\n      alert('Preencha todos os campos e selecione pelo menos uma tarefa.');\r\n      return;\r\n    }\r\n\r\n    alert(`Sprint \"${nomeSprint}\" criada com ${tarefasSelecionadas.length} tarefa(s) por ${duracaoDias} dia(s).`);\r\n    // Aqui você pode enviar as informações para o backend se desejar\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <div className=\"sprint-container\">\r\n      <h2>Planejamento de Sprint</h2>\r\n\r\n      <div className=\"sprint-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome da Sprint\"\r\n          value={nomeSprint}\r\n          onChange={(e) => setNomeSprint(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Duração (em dias)\"\r\n          value={duracaoDias}\r\n          onChange={(e) => setDuracaoDias(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <h3>Tarefas Pendentes</h3>\r\n      <ul className=\"lista-tarefas\">\r\n        {tarefas.map((tarefa) => (\r\n          <li key={tarefa._id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={tarefasSelecionadas.includes(tarefa._id)}\r\n                onChange={() => toggleTarefa(tarefa._id)}\r\n              />\r\n              {tarefa.nome}\r\n            </label>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"sprint-botoes\">\r\n        <button onClick={iniciarSprint}>Iniciar Sprint</button>\r\n        <button onClick={() => navigate('/dashboard')}>Voltar ao Dashboard</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SprintPlanning;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}